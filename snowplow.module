<?php

/**
 * @file
 * Snowplow module.
 */

/**
 * Implements hook_menu().
 */
function snowplow_menu() {
  $items = array();

  $items['admin/config/system/snowplow'] = array(
    'title' => 'Snowplow Analytics',
    'description' => 'Configure tracking behavior for snowplow analytics.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('snowplow_admin_settings_form'),
    'access arguments' => array('administer snowplow analytics'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'snowplow.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function snowplow_libraries_info() {
  $libraries['snowplow'] = array(
    'name' => 'Snowplow Analytics Tracker',
    'vendor url' => 'https://github.com/snowplow/snowplow-php-tracker',
    'download url' => 'https://github.com/snowplow/snowplow-php-tracker/archive/master.zip',
    'version arguments' => array(
      'file' => 'CHANGELOG',
      'pattern' => "@Version\s+([0-9a-zA-Z\.-]+)@",
      'lines' => 5,
      ),
    'files' => array(
      'php' => array(
        'src/Constants.php',
        'src/Emitter.php',
        'src/Payload.php',
        'src/Subject.php',
        'src/Tracker.php',
        'src/Emitters/CurlEmitter.php',
        'src/Emitters/FileEmitter.php',
        'src/Emitters/SocketEmitter.php',
        'src/Emitters/SyncEmitter.php',
        'vendor/autoload.php',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_user_create().
 */
function snowplow_user_insert(&$edit, $account, $category) {
  // Check new user tracking is enabled.
  if (variable_get('snowplow_track_new_user')) {
    // Get an object.
    $snowplow_tracker = snowplow_get_api_object();
    $snowplow_tracker->trackStructEvent("user", "new", "user", "uid", $account->uid);
    $snowplow_tracker->flushEmitters();
  }
}

/**
 * Implements hook_user_login().
 */
function snowplow_user_login(&$edit, $account) {
  if (variable_get('snowplow_track_login')) {
    $snowplow_tracker = snowplow_get_api_object();
    $snowplow_tracker->trackStructEvent("user", "login", "user", "uid", $account->uid);
    $snowplow_tracker->flushEmitters();
  }
}

/**
 * Implements hook_user_logout().
 */
function snowplow_user_logout($account) {
  if (variable_get('snowplow_track_logout')) {
    $snowplow_tracker = snowplow_get_api_object();
    $snowplow_tracker->trackStructEvent("user", "logout", "user", "uid", $account->uid);
    $snowplow_tracker->flushEmitters();
  }
}

/**
 * Implements hook_permission().
 */
function snowplow_permission() {
  return array(
    'administer snowplow analytics' => array(
      'title' => t('Administer Snowplow Analytics'),
      'description' => t('Change the tracking settings for Snowplow analytics.'),
    ),
  );
}

/**
 * Get an instance of the Snoplow API tracker object.
 * @return [type] [description]
 */
function snowplow_get_api_object() {
  GLOBAL $user;
  // Load snowplow Library.
  $library = libraries_load('snowplow');
  if (!$library['installed']) {
    $msg = t('Failed to load Snowplow PHP library. Please refer to the installation requirements.');
    watchdog('snowplow', $msg, array(), WATCHDOG_ERROR);
    drupal_set_message($msg, 'error', FALSE);
    return NULL;
  }
  // Get the collecor URL.
  $sp_collector_uri = variable_get('snowplow_app_endpoint', '');
  // Ge the App Id.
  $sp_app_id = variable_get('snowplow_app_id', 'APP-ID');
  // Create a new emitter object.
  $emitter = new Snowplow\Tracker\Emitters\CurlEmitter($sp_collector_uri, FALSE, "GET", 2, 2, TRUE);
  // Setup the subject (object being tracked);
  $subject = new Snowplow\Tracker\Subject();
  // Set user ID on the this object.
  $subject->setUserId($user->uid);
  // Create a tracker object.
  $tracker = new Snowplow\Tracker\Tracker($emitter, $subject, 'namespace', $sp_app_id);

  return $tracker;
}


